name: Local Release

on:
  push:
    tags:
      - "*"

env:
  IMAGE: rancher/machine

jobs:
  build-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # needed for the Vault authentication
    strategy:
      fail-fast: true
      matrix:
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - name: Setup Environment Variables
        run: |
          echo "GOOS=${{ matrix.os }}"     >> "$GITHUB_ENV"
          echo "GOARCH=${{ matrix.arch }}" >> "$GITHUB_ENV"
          echo "ARCH=${{ matrix.arch }}"   >> "$GITHUB_ENV"
      - name: Clean up
        run: ./scripts/clean
      - name: Compile Go
        run: ./scripts/build
      - name: Stage artifacts
        run: ./scripts/package
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "rancher-machine-${{ matrix.arch }}.tar.gz"
          path: "dist/artifacts/rancher-machine-${{ matrix.arch }}.tar.gz"
          if-no-files-found: error
          overwrite: true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: "digests-${{ matrix.os }}-${{ matrix.arch }}"
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 7
          overwrite: true

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-push-images
    permissions:
      contents: write # needed for creating the GH release
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download assets
        uses: actions/download-artifact@v4
        with:
          path: /tmp/assets
          pattern: rancher-machine-*.tar.gz
          merge-multiple: true
      - name: (for testing) check files
        run: ls -l /tmp/assets
      - name: Create GH release
        run: gh release create ${{ github.ref_name }} --verify-tag --generate-notes /tmp/assets/rancher-machine-*.tar.gz
